{"version":3,"sources":["images/janch_logo.png","components/Navbar.js","components/Chat.js","components/Home.js","components/Login.js","components/Dashboard.js","components/Lobby.js","components/Participant.js","components/Room.js","components/VideoChat.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","src","logo","alt","Chat","props","Home","Login","Dashboard","Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","onSubmit","htmlFor","type","id","value","onChange","required","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","identity","ref","autoPlay","muted","Room","token","handleLogout","room","setRoom","participants","setParticipants","remoteParticipants","sid","participantConnected","prevParticipants","participantDisconnected","p","Video","connect","name","then","forEach","currentRoom","localParticipant","state","tracks","trackPublication","stop","disconnect","onClick","VideoChat","setUsername","setRoomName","setToken","useCallback","event","target","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","data","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab540c82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/janch_logo.7c73f6a7.png\";","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/janch_logo.png\"\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-center\">\n      <Link to = \"/\"> <img src={logo} alt=\"logo\" className=\"logo\" /></Link>\n        <ul className=\"nav-links\">   \n          {/* <li> <Link to = \"/\">Home</Link></li> */}\n          <li> <Link to = \"/login\">Logout</Link></li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React, { useState } from 'react'\nimport ReactModal from 'react-modal';\nimport Navbar from \"./Navbar\"\n\nexport default function Chat(props) {\n\n  return (\n    <div>\n      <Navbar />\n      chat\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar\"\nimport Chat from \"./Chat\"\nexport default function Home() {\n  return (\n    <div>\n      <Navbar />\n      <h1>hi from homepage</h1>\n      <ul>\n        <Link to = \"/dashboard\"><li>dashboard</li></Link>\n        <li><Link to = \"/chat\"><li>Chat</li></Link></li>\n        <li><Link to = \"/videochat\"><li>Video Chat</li></Link></li>\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nexport default function Login() {\n  return (\n    <div>\n      <h1>hi from login page</h1>\n      <br></br>\n      <Link to = \"/\">Login in!</Link>\n    </div>\n  )\n}\n","import React from 'react'\nimport Navbar from \"./Navbar\"\nimport { Link } from \"react-router-dom\";\n\nexport default function Dashboard() {\n  return (\n    <div>\n      <Navbar />\n      <h1>hi from dashboard</h1>\n      <Link to = \"/chat\">Chat</Link>\n    </div>\n  )\n}\n","import React from 'react';\n\nconst Lobby = ({\n  username,\n  handleUsernameChange,\n  roomName,\n  handleRoomNameChange,\n  handleSubmit\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Enter a room</h2>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"field\"\n          value={username}\n          onChange={handleUsernameChange}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"room\">Room name:</label>\n        <input\n          type=\"text\"\n          id=\"room\"\n          value={roomName}\n          onChange={handleRoomNameChange}\n          required\n        />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Lobby;","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={true} />\n    </div>\n  );\n};\n\nexport default Participant;","import React, { useState, useEffect } from 'react';\nimport Video from 'twilio-video';\nimport Participant from './Participant';\n\nconst Room = ({ roomName, token, handleLogout }) => {\n    const [room, setRoom] = useState(null);\n    const [participants, setParticipants] = useState([]);\n\n    const remoteParticipants = participants.map(participant => (\n        <Participant\n            key={participant.sid}\n            participant={participant}\n        />\n    ));\n\n    useEffect(() => {\n        const participantConnected = participant => {\n          setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n        const participantDisconnected = participant => {\n          setParticipants(prevParticipants =>\n            prevParticipants.filter(p => p !== participant)\n          );\n        };\n        Video.connect(token, {\n          name: roomName\n        }).then(room => {\n          setRoom(room);\n          room.on('participantConnected', participantConnected);\n          room.on('participantDisconnected', participantDisconnected);\n          room.participants.forEach(participantConnected);\n        });\n\n        return () => {\n            setRoom(currentRoom => {\n              if (currentRoom && currentRoom.localParticipant.state === 'connected') {\n                currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n                  trackPublication.track.stop();\n                });\n                currentRoom.disconnect();\n                return null;\n              } else {\n                return currentRoom;\n              }\n            });\n        };\n    }, [roomName, token]);\n    \n    return (\n        <div className=\"room\">\n            <h2>Room: {roomName}</h2>\n            <button onClick={handleLogout}>Log out</button>\n            <div className=\"local-participant\">\n            {room ? (\n                <Participant\n                    key={room.localParticipant.sid}\n                    participant={room.localParticipant}\n                />\n            ) : (\n                ''\n            )}\n            </div>\n            <h3>Remote Participants</h3>\n            <div className=\"remote-participants\">{remoteParticipants}</div>\n        </div>\n    )\n};\n\nexport default Room;","import React, {useState, useCallback} from 'react';\nimport Lobby from './Lobby';\nimport Room from './Room';\n\nconst VideoChat = () => {\n    const [username, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n    const [token, setToken] = useState(null);\n\n    const handleUsernameChange = useCallback( (event) => {\n        setUsername(event.target.value);\n      }, []);\n    \n    const handleRoomNameChange = useCallback( (event) => {\n        setRoomName(event.target.value);\n    }, []);\n\n    const handleSubmit = useCallback(async event => {\n        event.preventDefault();\n        const data = await fetch('/videochat/video/token', {\n          method: 'POST',\n          body: JSON.stringify({\n            identity: username,\n            room: roomName\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => res.json());\n        setToken(data.token);\n    }, [username, roomName]);\n\n    const handleLogout = useCallback(event => {\n        setToken(null);\n    }, []);\n\n    let render;\n    if (token) {\n        render = (\n            <Room roomName={roomName} token={token} handleLogout={handleLogout} />\n        );\n    } else {\n        render = (\n        <Lobby\n            username={username}\n            roomName={roomName}\n            handleUsernameChange={handleUsernameChange}\n            handleRoomNameChange={handleRoomNameChange}\n            handleSubmit={handleSubmit}\n        />\n        );\n    }\n    return render;\n};\n\nexport default VideoChat;","import './App.scss';\nimport Home from \"./components/Home\"\nimport Login from \"./components/Login\"\nimport Dashboard from \"./components/Dashboard\"\nimport Chat from \"./components/Chat\"\nimport VideoChat from './components/VideoChat';\n\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch >\n          <Route exact path = \"/\" component = {Home}></Route>\n          <Route exact path = \"/login\" component = {Login}></Route>\n          <Route exact path = \"/dashboard\" component = {Dashboard}></Route>\n          <Route exact path = \"/chat\" component = {Chat}></Route>\n          <Route exact path = \"/videochat\" component = {VideoChat}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}